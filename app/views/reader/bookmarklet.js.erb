/** copyright for jankypost stuff below:
 * @author: Thomas Rampelberg <thomas@saunter.org>
 *
 * Copyright(c) 2011 Thomas Rampelberg.
 */

(function() {

  var extend = function(obj) {
    var rest = Array.prototype.slice.call(arguments, 1);
    for (var i=0,j=rest.length; i<j; i++) {
      for (var prop in rest[i]) obj[prop] = rest[i][prop];
    }
    return obj;
  };

  this.janky = function(opts) {
    janky._form(function(iframe, form) {
      opts = extend({}, janky._default_opts, opts);
      if (!opts.url) throw new Error("Must include a URL to send data to.");
      form.setAttribute("action", opts.url);
      form.setAttribute("method", opts.method);
      opts.data = extend({}, opts.data, {
        _origin: location.href
      });
      janky._input(iframe, form, opts.data);
      var _response = function(resp) {
        window.detachEvent && window.detachEvent('onmessage', _response);
        window.removeEventListener && window.removeEventListener(
          'message', _response, false);
        setTimeout(function() { document.body.removeChild(iframe) }, 1);
        opts.success && opts.success(JSON.parse(resp.data));
      };
      window.attachEvent && window.attachEvent('onmessage', _response);
      window.addEventListener && window.addEventListener(
        "message", _response, false);
      // IE<8 must use window.name
      iframe.onreadystatechange = function() {
        if (typeof(window.postMessage) != 'undefined' ||
            iframe.readyState != 'complete') return
        _response({ data: iframe.contentWindow.name });
      };
      form.submit();
    });
  };

  this.janky._form = function(cb) {
    var iframe = document.createElement("iframe");
    document.body.appendChild(iframe);
    iframe.style.display = "none";
    // IE creates the document only after yielding
    setTimeout(function() {
      var form = iframe.contentWindow.document.createElement("form");
      iframe.contentWindow.document.body.appendChild(form);
      cb(iframe, form);
    }, 0);
  };
  this.janky._default_opts = {
    method: 'get'
  };
  this.janky.is_string = function(obj) {
    return !!(obj === '' || (obj && obj.charCodeAt && obj.substr))
  };
  this.janky._input = function(iframe, form, data) {
    for (var k in data) {
      var val = data[k];
      if (!janky.is_string(val))
        val = JSON.stringify(val);
      var inp = iframe.contentWindow.document.createElement("input");
      inp.setAttribute("type", "hidden");
      inp.setAttribute("name", k);
      inp.value = val;
      form.appendChild(inp);
    };
  };
})();


// A content extractor from Readability.js:

var readabilityVersion = "0.4";
var emailSrc = 'http://davehauenstein.com/readability/email.php';
var iframeLoads = 0;

function grabArticle() {
	var allParagraphs = document.getElementsByTagName("p");
	var topDivCount = 0;
	var topDiv = null;
	var topDivParas;

	var articleContent = document.createElement("DIV");
	var articleFooter = document.createElement("DIV");

	// Replace all doubled-up <BR> tags with <P> tags, and remove fonts.
	var pattern =  new RegExp ("<br/?>[ \r\n\s]*<br/?>", "g");
//	document.body.innerHTML = document.body.innerHTML.replace(pattern, "</p><p>").replace(/<\/?font[^>]*>/g, '');

	// Grab the title from the <title> tag and inject it as the title.

	// Study all the paragraphs and find the chunk that has the best score.
	// A score is determined by things like: Number of <p>'s, commas, special classes, etc.
	for (var j=0; j	< allParagraphs.length; j++) {
		parentNode = allParagraphs[j].parentNode;

		// Initialize readability data
		if(typeof parentNode.readability == 'undefined')
		{
			parentNode.readability = {"contentScore": 0};

			// Look for a special classname
			if(parentNode.className.match(/(comment|meta|footer|footnote)/))
				parentNode.readability.contentScore -= 50;
			else if(parentNode.className.match(/((^|\\s)(post|hentry|entry[-]?(content|text|body)?|article[-]?(content|text|body)?)(\\s|$))/))
				parentNode.readability.contentScore += 25;

			// Look for a special ID
			if(parentNode.id.match(/(comment|meta|footer|footnote)/))
				parentNode.readability.contentScore -= 50;
			else if(parentNode.id.match(/^(post|hentry|entry[-]?(content|text|body)?|article[-]?(content|text|body)?)$/))
				parentNode.readability.contentScore += 25;
		}

		// Add a point for the paragraph found
		if(getInnerText(allParagraphs[j]).length > 10)
			parentNode.readability.contentScore++;

		// Add points for any commas within this paragraph
		parentNode.readability.contentScore += getCharCount(allParagraphs[j]);
	}

	// Assignment from index for performance. See http://www.peachpit.com/articles/article.aspx?p=31567&seqNum=5
	for(nodeIndex = 0; (node = document.getElementsByTagName('*')[nodeIndex]); nodeIndex++)
		if(typeof node.readability != 'undefined' && (topDiv == null || node.readability.contentScore > topDiv.readability.contentScore))
			topDiv = node;

	if(topDiv == null)
	{
	  topDiv = document.createElement('div');
	  topDiv.innerHTML = 'Sorry, readability was unable to parse this page for content. If you feel like it should have been able to, please <a href="http://code.google.com/p/arc90labs-readability/issues/entry">let us know by submitting an issue.</a>';
	}


	cleanStyles(topDiv);					// Removes all style attributes
	topDiv = killDivs(topDiv);				// Goes in and removes DIV's that have more non <p> stuff than <p> stuff
	topDiv = killBreaks(topDiv);            // Removes any consecutive <br />'s into just one <br />

	// Cleans out junk from the topDiv just in case:
	topDiv = clean(topDiv, "form");
	topDiv = clean(topDiv, "object");
	topDiv = clean(topDiv, "table", 250);
	topDiv = clean(topDiv, "h1");
	topDiv = clean(topDiv, "h2");
	topDiv = clean(topDiv, "iframe");


	articleContent.appendChild(topDiv);

	return articleContent.innerHTML;
}

// Get the inner text of a node - cross browser compatibly.
function getInnerText(e) {
	if (navigator.appName == "Microsoft Internet Explorer")
		return e.innerText;
	else
		return e.textContent;
}

// Get character count
function getCharCount ( e,s ) {
    s = s || ",";
	return getInnerText(e).split(s).length;
}

function cleanStyles( e ) {
    e = e || document;
    var cur = e.firstChild;

	// If we had a bad node, there's not much we can do.
	if(!e)
		return;

	// Remove any root styles, if we're able.
	if(typeof e.removeAttribute == 'function')
		e.removeAttribute('style');

    // Go until there are no more child nodes
    while ( cur != null ) {
		if ( cur.nodeType == 1 ) {
			// Remove style attribute(s) :
			cur.removeAttribute("style");
			cleanStyles( cur );
		}
		cur = cur.nextSibling;
	}
}

function killDivs ( e ) {
	var divsList = e.getElementsByTagName( "div" );
	var curDivLength = divsList.length;

	// Gather counts for other typical elements embedded within.
	// Traverse backwards so we can remove nodes at the same time without effecting the traversal.
	for (var i=curDivLength-1; i >= 0; i--) {
		var p = divsList[i].getElementsByTagName("p").length;
		var img = divsList[i].getElementsByTagName("img").length;
		var li = divsList[i].getElementsByTagName("li").length;
		var a = divsList[i].getElementsByTagName("a").length;
		var embed = divsList[i].getElementsByTagName("embed").length;

	// If the number of commas is less than 10 (bad sign) ...
	if ( getCharCount(divsList[i]) < 10) {
			// And the number of non-paragraph elements is more than paragraphs
			// or other ominous signs :
			if ( img > p || li > p || a > p || p == 0 || embed > 0) {
				divsList[i].parentNode.removeChild(divsList[i]);
			}
		}
	}
	return e;
}

function killBreaks ( e ) {
	e.innerHTML = e.innerHTML.replace(/(<br\s*\/?>(\s|&nbsp;?)*){1,}/g,'<br />');
	return e;
}

function clean(e, tags, minWords) {
	var targetList = e.getElementsByTagName( tags );
	minWords = minWords || 1000000;

	for (var y=0; y < targetList.length; y++) {
		// If the text content isn't laden with words, remove the child:
		if (getCharCount(targetList[y], " ") < minWords) {
			targetList[y].parentNode.removeChild(targetList[y]);
		}
	}
	return e;
}

function emailBox() {
    var emailContainer = document.getElementById('email-container');
    if(null != emailContainer)
    {
        return;
    }

    var emailContainer = document.createElement('div');
    emailContainer.setAttribute('id', 'email-container');
    emailContainer.innerHTML = '<iframe src="'+emailSrc + '?pageUrl='+escape(window.location)+'&pageTitle='+escape(document.title)+'" scrolling="no" onload="removeFrame()" style="width:500px; height: 490px; border: 0;"></iframe>';

    document.body.appendChild(emailContainer);
}

function removeFrame()
{
    ++iframeLoads;
    if(iframeLoads >= 6)
    {
        var emailContainer = document.getElementById('email-container');
        if(null != emailContainer) {
            emailContainer.parentNode.removeChild(emailContainer);
        }
        // reset the count
        iframeLoads = 0;
    }
}

var readertron_success = function(post_id) {
	var div = document.createElement("div");
	div.style.position = "absolute";
	div.style.width = "490px";
	div.style.padding = "5px";
	div.style.top = "0px";
	div.style.fontFamily = "Helvetica";
	div.style.fontSize = "12px";
	div.style.fontWeight = "bold";
	div.style.backgroundColor = "#F9EDBE";
	div.style.textAlign = "center";
	var msg = document.createTextNode("Your note has been shared successfully! (Post id: " + post_id + ")");
	div.appendChild(msg);
	document.getElementById("readertron-bookmarklet").appendChild(div);
	setTimeout('var c = document.getElementById("readertron-bookmarklet"); c.parentNode.removeChild(c)', 3000);
};

var readertron_execute = function(text) {
	var note = document.getElementById("readertron-textarea").value;
	if (typeof(note) === "undefined") {
		note = "";
	};
	
	janky({ url: "<%= Domain.url %>/reader/create_post",
	            data: { note: note, content: text, token: "<%= @token %>", url: window.location.href, title: document.getElementById("readertron-title").value },
				method: "POST",
	            success: function(resp) {
					readertron_success(resp.post_id);
				}, 
				error: function() {
					console.log('error =(');
				}
	});
	return false;
};

try {
	var text = window.getSelection();
	var objRange = text.getRangeAt(0);
	var objClone = objRange.cloneContents();
	var objDiv = document.createElement("div");
	objDiv.appendChild(objClone);
	text = objDiv.innerHTML;
} catch(err) {
	try {
		var text = grabArticle();
	} catch(err2) {
		var text = "<p>[Click through to read the rest]</p>";
	}
};
var div = document.createElement("div");
div.id = "readertron-bookmarklet";
div.style.position ="fixed";
div.style.zIndex = "99999";
div.style.width = "500px";
div.style.height = "300px";
div.style.backgroundColor = "white";
div.style.border = "3px solid #B4CEFE";
div.style.top = "10px";
div.style.right = "10px";
var img = document.createElement("img");
img.src = "<%= Domain.url %>/assets/logo-with-wordmark.png";
img.style.padding = "5px";
img.style.position = "absolute";
img.style.top = "0px";
img.style.left = "24px";
div.appendChild(img);
var titlediv = document.createElement("div");
var title = document.createElement("input");
title.id = "readertron-title";
title.value = document.title;
title.style.color = "#333";
title.style.fontSize = "18px";
title.style.fontFamily = "Helvetica, arial, sans-serif";
title.style.position = "absolute";
title.style.left = "40px";
title.style.top = "40px";
title.style.width = "400px";
titlediv.appendChild(title);
div.appendChild(titlediv);
var contentdiv = document.createElement("div");
contentdiv.style.padding = "0px 0px 0px 5px";
contentdiv.style.height = "100px";
contentdiv.style.overflowY = "scroll";
contentdiv.style.position = "absolute";
contentdiv.style.top = "80px";
contentdiv.style.width = "400px";
contentdiv.style.left = "40px";
contentdiv.style.fontFamily = "arial, sans-serif";
contentdiv.style.fontSize = "12px";
contentdiv.style.color = "#333";
contentdiv.style.border = "1px solid #999";
contentdiv.innerHTML = text;
div.appendChild(contentdiv);
var form = document.createElement("form");
var textarea = document.createElement("textarea");
textarea.style.width = "395px";
textarea.style.height = "50px";
textarea.style.margin = "5px 0px 20px 0px";
textarea.style.padding = "5px";
textarea.style.position = "absolute";
textarea.style.top = "180px";
textarea.style.left = "40px";
textarea.id = "readertron-textarea";
var quotes = document.createElement("img");
quotes.src = "<%= Domain.url %>/assets/bookmarklet-quotes.png";
quotes.style.position = "absolute";
quotes.style.top = "180px";
quotes.style.left = "10px";
div.appendChild(quotes);
var closelink = document.createElement("a");
closelink.style.position = "absolute";
closelink.style.top = "10px";
closelink.style.right = "10px";
closelink.style.color = "#100F62";
closelink.style.fontSize = "12px";
closelink.style.fontFamily = "arial";
closelink.onclick = function() { var c = document.getElementById("readertron-bookmarklet"); c.parentNode.removeChild(c); };
closelink.href = "#";
var closetext = document.createTextNode("Close this");
closelink.appendChild(closetext);
div.appendChild(closelink);
var submit = document.createElement("a");
var submittext = document.createTextNode("Post Item");
submit.appendChild(submittext);
submit.href = "#";
submit.style.position = "absolute";
submit.style.top = "250px";
submit.style.left = "40px";
submit.style.color = "#100F62";
submit.style.fontSize = "12px";
submit.style.fontFamily = "arial";
submit.onclick = function(e) { readertron_execute(text); };
form.appendChild(textarea);
form.appendChild(submit);
div.appendChild(form);
document.body.appendChild(div);